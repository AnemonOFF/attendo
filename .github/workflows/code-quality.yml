name: Code Quality

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  frontend-code-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        working-directory: ./front
        run: npm ci

      - name: Run Prettier check
        working-directory: ./front
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Run ESLint with detailed output
        working-directory: ./front
        run: npm run lint -- --format=json --output-file=eslint-results.json || true

      - name: Upload ESLint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: eslint-results
          path: front/eslint-results.json
          retention-days: 7

  backend-code-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Install SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Run .NET format check
        working-directory: ./back/src
        run: dotnet format --verify-no-changes --verbosity diagnostic

      - name: Run .NET analyzers
        working-directory: ./back/src
        run: dotnet build --configuration Release --verbosity normal

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        working-directory: ./front
        run: npm ci

      - name: Run npm audit
        working-directory: ./front
        run: npm audit --audit-level=moderate

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        working-directory: ./back/src
        run: dotnet restore

      - name: Run .NET security check
        working-directory: ./back/src
        run: dotnet list package --vulnerable --include-transitive
