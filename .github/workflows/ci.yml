name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  frontend-lint-and-build:
    name: Frontend Lint & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        working-directory: ./front
        run: npm ci

      - name: Run ESLint
        working-directory: ./front
        run: npm run lint

      - name: Run TypeScript type check
        working-directory: ./front
        run: npx tsc --noEmit

      - name: Build frontend
        working-directory: ./front
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: front/dist/
          retention-days: 7

  backend-build-and-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Cache .NET packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        working-directory: ./back
        run: dotnet restore

      - name: Build backend
        working-directory: ./back
        run: dotnet build --configuration Release --no-restore

      - name: Run tests (if any)
        working-directory: ./back
        run: dotnet test --configuration Release --no-build --verbosity normal
        continue-on-error: true

      - name: Publish backend
        working-directory: ./back
        run: dotnet publish --configuration Release --no-build --output ./publish

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-publish
          path: back/publish/
          retention-days: 7

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [frontend-lint-and-build, backend-build-and-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: false
          tags: attendo-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: false
          tags: attendo-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
